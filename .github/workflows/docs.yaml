name: Update Docs

on:
  push:
    branches:
      - stable
    paths:
      - 'lib/**'
      - 'pubspec.yaml'
      - '.github/workflows/docs.yaml'
  pull_request:
    branches:
      - stable
    paths:
      - 'lib/**'
      - 'pubspec.yaml'
      - '.github/workflows/docs.yaml'

jobs:
  update-docs:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      pr_exists: ${{ steps.update_docs_branch.outputs.pr_exists }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
      - name: Install dependencies
        run: dart pub get
      - name: Analyze project source
        run: dart analyze
      - name: Get version from pubspec.yaml
        id: get_version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | head -n1 | cut -d ' ' -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Generate docs
        run: dart doc
      - name: Clean up everything except doc/
        run: |
          find . -mindepth 1 -maxdepth 1 ! -name 'doc' ! -name '.git' ! -name '.' ! -name '..' -exec rm -rf {} +
      - name: Move doc/api/* to root
        run: |
          shopt -s dotglob
          mv doc/api/* .
          shopt -u dotglob
      - name: Remove doc/api if empty
        run: |
          rmdir doc/api || true
      - name: Create or update docs branch
        id: update_docs_branch
        env:
          VERSION: ${{ steps.get_version.outputs.version }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          BRANCH=docs-for-$VERSION
          # Check for PR from docs branch to gh-pages
          PR_EXISTS=$(gh pr list --base gh-pages --head "$BRANCH" --state open --json number --jq 'length > 0' || echo false)
          if [ "$PR_EXISTS" = "true" ]; then
            echo "pr_exists=true" >> $GITHUB_OUTPUT
          else
            echo "pr_exists=false" >> $GITHUB_OUTPUT
          fi
          if git ls-remote --exit-code --heads origin "$BRANCH"; then
            git fetch origin "$BRANCH"
            git clean -fd
            git checkout "$BRANCH"
            git reset --hard origin/$BRANCH
          else
            git checkout --orphan "$BRANCH"
            git reset --hard
          fi
          git add .
          echo "Files in working directory:"
          ls -alR
          echo "Files staged for commit:"
          git diff --cached --name-status
          echo "Files changed (not staged):"
          git diff --name-status
          echo "Now checking for changes..."
          # Compare current files against origin/gh-pages by path
          if git diff --cached --quiet origin/gh-pages -- . 2>/dev/null; then
            git commit -m "Update docs for $VERSION"
            git push -f origin "$BRANCH"
          else
            echo "No changes to commit."
          fi

  create-docs-pr:
    needs: [update-docs]
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    if: needs.update-docs.outputs.pr_exists == 'false'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Create or update PR to gh-pages
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: gh-pages
          title: Docs for ${{ needs.update-docs.outputs.version }}
          body: "Automated documentation update for version ${{ needs.update-docs.outputs.version }}."
          branch: docs-for-${{ needs.update-docs.outputs.version }}
